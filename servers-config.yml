Description: >
Parameters:
  ProjectName:
    Description: Project name prefixed to resource names.
    Type: String

Resources:
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to the load-balancer
      VpcId:
        Fn::ImportValue: !Sub "${ProjectName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to the hosts and SSH from local only
      VpcId:
        Fn::ImportValue: !Sub "${ProjectName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt update -y
          sudo apt install unzip awscli -y
          sudo apt install apache2 -y
          sudo systemctl start apache2.service
          cd /var/www/html
          sudo aws s3 cp s3://udacity-s3/devops/udacity.zip .
          sudo unzip -o udacity.zip
          sudo chown -R www-data:www-data .
      ImageId: ami-005bdb005fb00e791
      KeyName: udacity-dev-ops
      IamInstanceProfile: !Ref ListBucketInstanceProfile
      SecurityGroups: 
      - Ref: WebServerSecGroup  
      InstanceType: t3.medium
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: "10"
  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue: 
          Fn::Sub: "${ProjectName}-VPCID"
  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue: !Sub "${ProjectName}-PUB-NETS"
      LaunchConfigurationName: !Ref WebAppLaunchConfig
      DesiredCapacity: '2'
      MinSize: '2'
      MaxSize: '4'
      TargetGroupARNs:
      - Ref: "WebAppTargetGroup"
  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub "${ProjectName}-PUB-SN-1"
      - Fn::ImportValue: !Sub "${ProjectName}-PUB-SN-2"
      SecurityGroups:
      - Ref: LBSecGroup
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: "forward"
        TargetGroupArn: !Ref WebAppTargetGroup
      LoadBalancerArn: !Ref WebAppLB
      Port: "80"
      Protocol: "HTTP"
  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: "forward"
        TargetGroupArn: !Ref WebAppTargetGroup
      Conditions:
      - Field: "path-pattern"
        Values: ["/"]
      ListenerArn: !Ref Listener
      Priority: "1"

  ListBucketInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - Ref: S3BucketRole
  S3BucketRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
  S3BucketsPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: S3BucketsPolicy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - s3:List*
          Resource: "*"
      Roles:
      - Ref: S3BucketRole

